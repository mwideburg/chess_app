{"ast":null,"code":"import { getTweets, getUserTweets, writeTweet } from '../util/tweet_api_util';\nexport var RECEIVE_TWEETS = \"RECEIVE_TWEETS\";\nexport var RECEIVE_USER_TWEETS = \"RECEIVE_USER_TWEETS\";\nexport var RECEIVE_NEW_TWEET = \"RECEIVE_NEW_TWEET\";\nexport var receiveTweets = function receiveTweets(tweets) {\n  return {\n    type: RECEIVE_TWEETS,\n    tweets: tweets\n  };\n};\nexport var receiveUserTweets = function receiveUserTweets(tweets) {\n  return {\n    type: RECEIVE_USER_TWEETS,\n    tweets: tweets\n  };\n};\nexport var receiveNewTweet = function receiveNewTweet(tweet) {\n  return {\n    type: RECEIVE_NEW_TWEET,\n    tweet: tweet\n  };\n};\nexport var fetchTweets = function fetchTweets() {\n  return function (dispatch) {\n    return getTweets().then(function (tweets) {\n      return dispatch(receiveTweets(tweets));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var fetchUserTweets = function fetchUserTweets(id) {\n  return function (dispatch) {\n    return getUserTweets(id).then(function (tweets) {\n      return dispatch(receiveUserTweets(tweets));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var composeTweet = function composeTweet(data) {\n  return function (dispatch) {\n    return writeTweet(data).then(function (tweet) {\n      return dispatch(receiveNewTweet(tweet));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ross/Desktop/MTA_tracker/frontend/src/actions/tweet_actions.js"],"names":["getTweets","getUserTweets","writeTweet","RECEIVE_TWEETS","RECEIVE_USER_TWEETS","RECEIVE_NEW_TWEET","receiveTweets","tweets","type","receiveUserTweets","receiveNewTweet","tweet","fetchTweets","dispatch","then","catch","err","console","log","fetchUserTweets","id","composeTweet","data"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,UAAnC,QAAqD,wBAArD;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAK;AACtCC,IAAAA,IAAI,EAAEL,cADgC;AAEtCI,IAAAA,MAAM,EAANA;AAFsC,GAAL;AAAA,CAA5B;AAKP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAF,MAAM;AAAA,SAAK;AAC1CC,IAAAA,IAAI,EAAEJ,mBADoC;AAE1CG,IAAAA,MAAM,EAANA;AAF0C,GAAL;AAAA,CAAhC;AAKP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACvCH,IAAAA,IAAI,EAAEH,iBADiC;AAEvCM,IAAAA,KAAK,EAALA;AAFuC,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAC,QAAQ;AAAA,WACvCb,SAAS,GACNc,IADH,CACQ,UAAAP,MAAM;AAAA,aAAIM,QAAQ,CAACP,aAAa,CAACC,MAAD,CAAd,CAAZ;AAAA,KADd,EAEGQ,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ,CADuC;AAAA,GAAd;AAAA,CAApB;AAMP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,EAAE;AAAA,SAAI,UAAAP,QAAQ;AAAA,WAC3CZ,aAAa,CAACmB,EAAD,CAAb,CACGN,IADH,CACQ,UAAAP,MAAM;AAAA,aAAIM,QAAQ,CAACJ,iBAAiB,CAACF,MAAD,CAAlB,CAAZ;AAAA,KADd,EAEGQ,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ,CAD2C;AAAA,GAAZ;AAAA,CAA1B;AAMP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,SAAI,UAAAT,QAAQ;AAAA,WAC1CX,UAAU,CAACoB,IAAD,CAAV,CACGR,IADH,CACQ,UAAAH,KAAK;AAAA,aAAIE,QAAQ,CAACH,eAAe,CAACC,KAAD,CAAhB,CAAZ;AAAA,KADb,EAEGI,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ,CAD0C;AAAA,GAAZ;AAAA,CAAzB","sourcesContent":["import { getTweets, getUserTweets, writeTweet } from '../util/tweet_api_util';\n\nexport const RECEIVE_TWEETS = \"RECEIVE_TWEETS\";\nexport const RECEIVE_USER_TWEETS = \"RECEIVE_USER_TWEETS\";\nexport const RECEIVE_NEW_TWEET = \"RECEIVE_NEW_TWEET\";\n\nexport const receiveTweets = tweets => ({\n  type: RECEIVE_TWEETS,\n  tweets\n});\n\nexport const receiveUserTweets = tweets => ({\n  type: RECEIVE_USER_TWEETS,\n  tweets\n});\n\nexport const receiveNewTweet = tweet => ({\n  type: RECEIVE_NEW_TWEET,\n  tweet\n})\n\nexport const fetchTweets = () => dispatch => (\n  getTweets()\n    .then(tweets => dispatch(receiveTweets(tweets)))\n    .catch(err => console.log(err))\n);\n\nexport const fetchUserTweets = id => dispatch => (\n  getUserTweets(id)\n    .then(tweets => dispatch(receiveUserTweets(tweets)))\n    .catch(err => console.log(err))\n);\n\nexport const composeTweet = data => dispatch => (\n  writeTweet(data)\n    .then(tweet => dispatch(receiveNewTweet(tweet)))\n    .catch(err => console.log(err))\n);"]},"metadata":{},"sourceType":"module"}