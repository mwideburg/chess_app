{"ast":null,"code":"import _classCallCheck from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ross/Desktop/MTA_tracker/frontend/src/components/tweets/tweets.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TweetBox from './tweet_box';\n\nvar Tweet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tweet, _React$Component);\n\n  function Tweet(props) {\n    var _this;\n\n    _classCallCheck(this, Tweet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tweet).call(this, props));\n    _this.state = {\n      tweets: []\n    };\n    return _this;\n  }\n\n  _createClass(Tweet, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchTweets();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newState) {\n      this.setState({\n        tweets: newState.tweets\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.tweets.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"There are no Tweets\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"All Tweets\"), this.state.tweets.map(function (tweet) {\n          return React.createElement(TweetBox, {\n            key: tweet._id,\n            text: tweet.text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n        }));\n      }\n    }\n  }]);\n\n  return Tweet;\n}(React.Component);\n\nexport default withRouter(Tweet);","map":{"version":3,"sources":["/Users/ross/Desktop/MTA_tracker/frontend/src/components/tweets/tweets.js"],"names":["React","withRouter","TweetBox","Tweet","props","state","tweets","fetchTweets","newState","setState","length","map","tweet","_id","text","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAHiB;AAMlB;;;;yCAEoB;AACnB,WAAKF,KAAL,CAAWG,WAAX;AACD;;;8CAEyBC,Q,EAAU;AAClC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,QAAQ,CAACF;AAAnB,OAAd;AACD;;;6BAEQ;AACP,UAAI,KAAKD,KAAL,CAAWC,MAAX,CAAkBI,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAR;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEG,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,GAAlB,CAAsB,UAAAC,KAAK;AAAA,iBAC1B,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEA,KAAK,CAACC,GAArB;AAA0B,YAAA,IAAI,EAAED,KAAK,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B;AAAA,SAA3B,CAFH,CADF;AAQD;AACF;;;;EA9BiBd,KAAK,CAACe,S;;AAiC1B,eAAed,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TweetBox from './tweet_box';\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tweets: []\n    }\n  }\n\n  componentWillMount() {\n    this.props.fetchTweets();\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({ tweets: newState.tweets });\n  }\n\n  render() {\n    if (this.state.tweets.length === 0) {\n      return (<div>There are no Tweets</div>)\n    } else {\n      return (\n        <div>\n          <h2>All Tweets</h2>\n          {this.state.tweets.map(tweet => (\n            <TweetBox key={tweet._id} text={tweet.text} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(Tweet);\n"]},"metadata":{},"sourceType":"module"}