{"ast":null,"code":"import _classCallCheck from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ross/Desktop/MTA_tracker/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ross/Desktop/MTA_tracker/frontend/src/components/profile/profile.js\";\nimport React from 'react';\nimport TweetBox from '../tweets/tweet_box';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      tweets: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.props.currentUser.id);\n      this.props.fetchUserTweets(this.props.currentUser.id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newState) {\n      this.setState({\n        tweets: newState.tweets\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.tweets.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"This user has no Tweets\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"All of This User's Tweets\"), this.state.tweets.map(function (tweet) {\n          return React.createElement(TweetBox, {\n            key: tweet._id,\n            text: tweet.text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n        }));\n      }\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/ross/Desktop/MTA_tracker/frontend/src/components/profile/profile.js"],"names":["React","TweetBox","Profile","props","state","tweets","console","log","currentUser","id","fetchUserTweets","newState","setState","length","map","tweet","_id","text","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAHe;AAMlB;;;;yCAEoB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,EAAnC;AACA,WAAKN,KAAL,CAAWO,eAAX,CAA2B,KAAKP,KAAL,CAAWK,WAAX,CAAuBC,EAAlD;AACH;;;8CAEyBE,Q,EAAU;AAChC,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM,QAAQ,CAACN;AAAnB,OAAd;AACH;;;6BAEQ;AACL,UAAI,KAAKD,KAAL,CAAWC,MAAX,CAAkBQ,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAR;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAAsB,UAAAC,KAAK;AAAA,iBAC1B,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEA,KAAK,CAACC,GAArB;AAA0B,YAAA,IAAI,EAAED,KAAK,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B;AAAA,SAA3B,CAFH,CADF;AAQD;AACF;;;;EA/BejB,KAAK,CAACkB,S;;AAkC5B,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport TweetBox from '../tweets/tweet_box';\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tweets: []\n        }\n    }\n    \n    componentWillMount() {\n        console.log(this.props.currentUser.id)\n        this.props.fetchUserTweets(this.props.currentUser.id);\n    }\n\n    componentWillReceiveProps(newState) {\n        this.setState({ tweets: newState.tweets });\n    }   \n    \n    render() {\n        if (this.state.tweets.length === 0) {\n          return (<div>This user has no Tweets</div>)\n        } else {\n          return (\n            <div>\n              <h2>All of This User's Tweets</h2>\n              {this.state.tweets.map(tweet => (\n                <TweetBox key={tweet._id} text={tweet.text} />\n              ))}\n            </div>\n          );\n        }\n      }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}